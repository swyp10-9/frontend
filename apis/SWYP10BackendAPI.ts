/**
 * Generated by orval v7.11.1 🍺
 * Do not edit manually.
 * SWYP10 Backend API
 * # 공통 응답 구조(CommonResponse)

모든 API 응답은 아래의 공통 구조로 래핑됩니다.

---

## ✅ 성공 응답 예시

```
{
  "success": true,
  "data": { ... },    // API별 실제 응답 객체
  "message": null,
  "code": null,
  "errorDetail": null
}
```

---

## ❌ 실패 응답 예시

```
{
  "success": false,
  "data": null,
  "message": "오류 메시지",
  "code": 4000,
  "errorDetail": {
    // 필요시 필드별 상세 에러 정보 등
  }
}
```

- `success`: true(성공), false(실패)
- `data`: 실제 응답 데이터(성공 시만)
- `message`: 에러 메시지(실패 시)
- `code`: 에러 코드(실패 시)
- `errorDetail`: (옵션) 상세 에러 정보, 유효성 오류 등

---
각 API의 실제 데이터 구조는 `data` 필드 안에 포함되어 있습니다.

 * OpenAPI spec version: 1.0.0
 */
import type {
  FestivalCalendarDailyCountRequest,
  FestivalCalendarDailyCountResponse,
  FestivalCalendarRequest,
  FestivalDetailResponse,
  FestivalListResponse,
  FestivalMapRequest,
  FestivalMyPageRequest,
  FestivalRestaurantListResponse,
  FestivalReviewCreateRequest,
  FestivalReviewListResponse,
  FestivalTravelCourseListResponse,
  GetFestivalRestaurantsParams,
  GetFestivalReviewsParams,
  GetFestivalTravelCoursesParams,
  GetFestivalsForPersonalTestParams,
  GetTopKeywordsParams,
  MyInfoResponse,
  MyReviewListResponse,
  OauthLoginParams,
  PageRequest,
  RunFestivalSyncJob200,
  SearchFestivalsParams,
  SearchKeywordListResponse,
  TokenResponse,
  UpdateMyInfoParams,
  UserInfo,
} from './SWYP10BackendAPI.schemas';
import { httpClient } from './httpClient';

export const runFestivalSyncJob = () => {
  return httpClient<RunFestivalSyncJob200>({
    url: `/batch/run-festival-sync`,
    method: 'POST',
  });
};

/**
 * 해당 축제의 리뷰 목록 조회 (페이징 지원)
 * @summary 축제 리뷰 목록 조회
 */
export const getFestivalReviews = (
  festivalId: number,
  params: GetFestivalReviewsParams,
) => {
  return httpClient<FestivalReviewListResponse>({
    url: `/api/v1/festivals/${festivalId}/reviews`,
    method: 'GET',
    params,
  });
};

/**
 * 사용자가 특정 축제에 리뷰 작성
 * @summary 리뷰 등록
 */
export const createFestivalReview = (
  festivalId: number,
  festivalReviewCreateRequest: FestivalReviewCreateRequest,
) => {
  return httpClient<number>({
    url: `/api/v1/festivals/${festivalId}/reviews`,
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    data: festivalReviewCreateRequest,
  });
};

/**
 * 로그인 사용자의 축제 북마크 저장
 * @summary 북마크 저장
 */
export const addBookmark = (festivalId: number) => {
  return httpClient<number>({
    url: `/api/v1/festivals/${festivalId}/bookmarks`,
    method: 'POST',
  });
};

/**
 * 현재 토큰을 연장하여 새로운 토큰 발급
 * @summary 토큰 연장
 */
export const refreshToken = () => {
  return httpClient<TokenResponse>({
    url: `/api/v1/auth/refresh`,
    method: 'POST',
  });
};

/**
 * OAuth 인가 코드로 로그인 처리 - 항상 토큰 반환
 * @summary OAuth 인가 코드 로그인
 */
export const oauthLogin = (provider: string, params: OauthLoginParams) => {
  if (!process.env.NEXT_PUBLIC_WEB_URL) {
    throw new Error('NEXT_PUBLIC_WEB_URL is not set');
  }

  return httpClient<TokenResponse>({
    url: `/api/v1/auth/oauth/login/${provider}`,
    method: 'POST',
    params,
    headers: {
      Origin: process.env.NEXT_PUBLIC_WEB_URL, // 브라우저를 거쳤으면 기본 탑재되었을 헤더
    },
  });
};

/**
 * 사용자 닉네임 변경
 * @summary 사용자 정보 변경
 */
export const updateMyInfo = (params: UpdateMyInfoParams) => {
  return httpClient<MyInfoResponse>({
    url: `/api/v1/mypage/me`,
    method: 'PATCH',
    params,
  });
};

/**
 * 인기 검색어 조회 - Top10
 * @summary 인기 검색어 조회
 */
export const getTopKeywords = (params?: GetTopKeywordsParams) => {
  return httpClient<SearchKeywordListResponse>({
    url: `/api/v1/search/keywords/top`,
    method: 'GET',
    params,
  });
};

/**
 * 사용자 리뷰 작성 목록 조회 (페이징 지원)
 * @summary 리뷰 목록 조회
 */
export const getMyReviews = (params: PageRequest) => {
  return httpClient<MyReviewListResponse>({
    url: `/api/v1/mypage/reviews`,
    method: 'GET',
    params: { ...params },
  });
};

/**
 * 축제 상세 조회
 * @summary 축제 상세 조회
 */
export const getFestivalDetail = (festivalId: number) => {
  return httpClient<FestivalDetailResponse>({
    url: `/api/v1/festivals/${festivalId}`,
    method: 'GET',
  });
};

/**
 * 축제 지역 내 여행 코스 추천 (페이징 지원)
 * @summary 여행 코스 조회
 */
export const getFestivalTravelCourses = (
  festivalId: number,
  params: GetFestivalTravelCoursesParams,
) => {
  return httpClient<FestivalTravelCourseListResponse>({
    url: `/api/v1/festivals/${festivalId}/travel-courses`,
    method: 'GET',
    params,
  });
};

/**
 * 해당 축제 지역 내 맛집 조회 (페이징 지원)
 * @summary 맛집 조회
 */
export const getFestivalRestaurants = (
  festivalId: number,
  params: GetFestivalRestaurantsParams,
) => {
  return httpClient<FestivalRestaurantListResponse>({
    url: `/api/v1/festivals/${festivalId}/restaurants`,
    method: 'GET',
    params,
  });
};

/**
 * 축제 리스트 조회 - 검색 페이지
 * @summary 축제 리스트 조회 - 검색 페이지
 */
export const searchFestivals = (params: SearchFestivalsParams) => {
  return httpClient<FestivalListResponse>({
    url: `/api/v1/festivals/search`,
    method: 'GET',
    params,
  });
};

/**
 * 축제 리스트 조회 - 맞춤 축제 페이지
 * @summary 축제 리스트 조회 - 맞춤 축제 페이지
 */
export const getFestivalsForPersonalTest = (
  params: GetFestivalsForPersonalTestParams,
) => {
  return httpClient<FestivalListResponse>({
    url: `/api/v1/festivals/personal-test`,
    method: 'GET',
    params,
  });
};

/**
 * 축제 리스트 조회 - 마이페이지
 * @summary 축제 리스트 조회 - 마이페이지
 */
export const getMyPageFestivals = (params: FestivalMyPageRequest) => {
  return httpClient<FestivalListResponse>({
    url: `/api/v1/festivals/mypage`,
    method: 'GET',
    params: { ...params },
  });
};

/**
 * 축제 리스트 조회 - 지도 페이지
 * @summary 축제 리스트 조회 - 지도 페이지
 */
export const getFestivalsForMap = (params: FestivalMapRequest) => {
  return httpClient<FestivalListResponse>({
    url: `/api/v1/festivals/map`,
    method: 'GET',
    params: { ...params },
  });
};

/**
 * 축제 리스트 조회 - 달력 페이지
 * @summary 축제 리스트 조회 - 달력 페이지
 */
export const getFestivalsForCalendar = (params: FestivalCalendarRequest) => {
  return httpClient<FestivalListResponse>({
    url: `/api/v1/festivals/calendar`,
    method: 'GET',
    params: { ...params }, // TODO: request 속성 사용하지 않음
  });
};

export const getFestivalsCalendarDailyCount = (
  params: FestivalCalendarDailyCountRequest,
) => {
  return httpClient<FestivalCalendarDailyCountResponse>({
    url: 'api/v1/festivals/calendar/daily-count',
    method: 'GET',
    params: { ...params },
  });
};

/**
 * JWT 토큰으로 현재 로그인한 사용자 정보 조회
 * @summary 사용자 정보 조회
 */
export const getCurrentUser = () => {
  return httpClient<UserInfo>({ url: `/api/v1/auth/me`, method: 'GET' });
};

/**
 * 사용자 리뷰 삭제
 * @summary 리뷰 삭제
 */
export const deleteMyReview = (reviewId: number) => {
  return httpClient<null>({
    url: `/api/v1/mypage/reviews/${reviewId}`,
    method: 'DELETE',
  });
};

/**
 * 사용자 북마크 취소
 * @summary 북마크 취소
 */
export const cancelBookmark = (festivalId: number) => {
  return httpClient<null>({
    url: `/api/v1/mypage/bookmarks/${festivalId}`,
    method: 'DELETE',
  });
};

export type RunFestivalSyncJobResult = NonNullable<
  Awaited<ReturnType<typeof runFestivalSyncJob>>
>;
export type GetFestivalReviewsResult = NonNullable<
  Awaited<ReturnType<typeof getFestivalReviews>>
>;
export type CreateFestivalReviewResult = NonNullable<
  Awaited<ReturnType<typeof createFestivalReview>>
>;
export type AddBookmarkResult = NonNullable<
  Awaited<ReturnType<typeof addBookmark>>
>;
export type RefreshTokenResult = NonNullable<
  Awaited<ReturnType<typeof refreshToken>>
>;
export type OauthLoginResult = NonNullable<
  Awaited<ReturnType<typeof oauthLogin>>
>;
export type UpdateMyInfoResult = NonNullable<
  Awaited<ReturnType<typeof updateMyInfo>>
>;
export type GetTopKeywordsResult = NonNullable<
  Awaited<ReturnType<typeof getTopKeywords>>
>;
export type GetMyReviewsResult = NonNullable<
  Awaited<ReturnType<typeof getMyReviews>>
>;
export type GetFestivalDetailResult = NonNullable<
  Awaited<ReturnType<typeof getFestivalDetail>>
>;
export type GetFestivalTravelCoursesResult = NonNullable<
  Awaited<ReturnType<typeof getFestivalTravelCourses>>
>;
export type GetFestivalRestaurantsResult = NonNullable<
  Awaited<ReturnType<typeof getFestivalRestaurants>>
>;
export type SearchFestivalsResult = NonNullable<
  Awaited<ReturnType<typeof searchFestivals>>
>;
export type GetFestivalsForPersonalTestResult = NonNullable<
  Awaited<ReturnType<typeof getFestivalsForPersonalTest>>
>;
export type GetMyPageFestivalsResult = NonNullable<
  Awaited<ReturnType<typeof getMyPageFestivals>>
>;
export type GetFestivalsForMapResult = NonNullable<
  Awaited<ReturnType<typeof getFestivalsForMap>>
>;
export type GetFestivalsForCalendarResult = NonNullable<
  Awaited<ReturnType<typeof getFestivalsForCalendar>>
>;
export type GetCurrentUserResult = NonNullable<
  Awaited<ReturnType<typeof getCurrentUser>>
>;
export type DeleteMyReviewResult = NonNullable<
  Awaited<ReturnType<typeof deleteMyReview>>
>;
export type CancelBookmarkResult = NonNullable<
  Awaited<ReturnType<typeof cancelBookmark>>
>;

/**
 * Generated by orval v7.11.1 🍺
 * Do not edit manually.
 * SWYP10 Backend API
 * # 공통 응답 구조(CommonResponse)

모든 API 응답은 아래의 공통 구조로 래핑됩니다.

---

## ✅ 성공 응답 예시

```
{
  "success": true,
  "data": { ... },    // API별 실제 응답 객체
  "message": null,
  "code": null,
  "errorDetail": null
}
```

---

## ❌ 실패 응답 예시

```
{
  "success": false,
  "data": null,
  "message": "오류 메시지",
  "code": 4000,
  "errorDetail": {
    // 필요시 필드별 상세 에러 정보 등
  }
}
```

- `success`: true(성공), false(실패)
- `data`: 실제 응답 데이터(성공 시만)
- `message`: 에러 메시지(실패 시)
- `code`: 에러 코드(실패 시)
- `errorDetail`: (옵션) 상세 에러 정보, 유효성 오류 등

---
각 API의 실제 데이터 구조는 `data` 필드 안에 포함되어 있습니다.

 * OpenAPI spec version: 1.0.0
 */
export interface FestivalReviewCreateRequest {
  /**
   * 리뷰 내용
   * @minLength 0
   * @maxLength 500
   */
  content: string;
}

/**
 * 추가 회원가입 정보
 */
export interface SignupRequest {
  email: string;
  /**
   * @minLength 8
   * @maxLength 2147483647
   */
  password: string;
  /**
   * @minLength 2
   * @maxLength 20
   */
  nickname: string;
}

export interface TokenResponse {
  accessToken: string;
  tokenType: string;
  expiresIn: number;
  userId: number;
  nickname: string;
  needsAdditionalSignup: boolean;
}

export interface LoginRequest {
  email: string;
  password: string;
}

export interface MyInfoUpdateRequest {
  /**
   * 닉네임
   * @minLength 0
   * @maxLength 20
   */
  nickname: string;
}

export interface MyInfoResponse {
  /** 회원 ID */
  userId: number;
  /** 닉네임 */
  nickname: string;
  /** 프로필 이미지 URL */
  profileImage: string;
}

/**
 * 검색 키워드 목록 응답
 */
export interface SearchKeywordListResponse {
  /** 응답 데이터 목록 */
  content: SearchKeywordResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page: number;
  /** 페이지 크기 */
  size: number;
  /** 전체 요소 개수 */
  totalElements: number;
  /** 전체 페이지 개수 */
  totalPages: number;
  /** 첫 번째 페이지 여부 */
  first: boolean;
  /** 마지막 페이지 여부 */
  last: boolean;
  /** 빈 페이지 여부 */
  empty: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface SearchKeywordResponse {
  /** 검색어 */
  keyword: string;
  /** 검색 횟수 */
  count: number;
  /** 최근 검색일시 */
  lastSearchedAt: string;
}

/**
 * 페이징 요청 정보
 */
export interface PageRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  offset: number;
}

/**
 * 내 리뷰 목록 응답
 */
export interface MyReviewListResponse {
  /** 응답 데이터 목록 */
  content: MyReviewResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page: number;
  /** 페이지 크기 */
  size: number;
  /** 전체 요소 개수 */
  totalElements: number;
  /** 전체 페이지 개수 */
  totalPages: number;
  /** 첫 번째 페이지 여부 */
  first: boolean;
  /** 마지막 페이지 여부 */
  last: boolean;
  /** 빈 페이지 여부 */
  empty: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface MyReviewResponse {
  /** 리뷰 ID */
  id: number;
  /** 축제 ID */
  festivalId: number;
  /** 축제명 */
  festivalTitle: string;
  /** 썸네일 이미지 URL */
  festivalThumbnail: string;
  /** 리뷰 내용 */
  content: string;
  /** 리뷰 작성 날짜 */
  createdAt: string;
}

/**
 * 상세 내용
 */
export interface ContentResponse {
  /** 축제 타이틀 */
  title: string;
  /** 홈페이지 HTML */
  homepage: string;
  /** 주소1 */
  addr1: string;
  /** 주소2 */
  addr2: string;
  /** 개요/소개 */
  overview: string;
}

export interface FestivalDetailResponse {
  /** 축제 ID */
  id: number;
  /** 축제명 */
  title: string;
  /** 주소 */
  address: string;
  /** 테마 */
  theme: string;
  /** 축제 시작일 */
  startDate: string;
  /** 축제 종료일 */
  endDate: string;
  /** 썸네일 이미지 URL */
  thumbnail: string;
  /** 경도 */
  mapx: string;
  /** 위도 */
  mapy: string;
  /** 이미지 목록 */
  images: ImageResponse[];
  content: ContentResponse;
  info: InfoResponse;
}

/**
 * 이미지 목록
 */
export interface ImageResponse {
  /** 콘텐츠ID */
  contentid: string;
  /** 원본 이미지 URL */
  originimgurl: string;
  /** 이미지명 */
  imgname: string;
  /** 작은 이미지 URL */
  smallimageurl: string;
}

/**
 * 추가 정보
 */
export interface InfoResponse {
  /** 주최 */
  sponsor1: string;
  /** 주최 연락처 */
  sponsor1tel: string;
  /** 행사 시작일(YYYYMMDD) */
  eventstartdate: string;
  /** 행사 종료일(YYYYMMDD) */
  eventenddate: string;
  /** 운영 시간 */
  playtime: string;
  /** 장소 */
  eventplace: string;
  /** 행사 홈페이지 */
  eventhomepage: string;
  /** 이용 요금 */
  usetimefestival: string;
  /** 할인 정보 */
  discountinfofestival: string;
  /** 소요 시간 */
  spendtimefestival: string;
}

/**
 * 축제 여행코스 목록 조회 요청
 */
export interface FestivalTravelCoursePageRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /** 축제 ID */
  festivalId: number;
  /** 코스 타입 */
  courseType: string;
  /** 테마 */
  theme: string;
  /** 정렬 기준 (popularity,desc | duration,asc) */
  sort: string;
  offset: number;
}

export interface FestivalTravelCourseListResponse {
  /** 여행 코스 목록 */
  courses: FestivalTravelCourseResponse[];
  /** 근처 볼거리 목록 */
  nearbyAttractions: NearbyAttractionResponse[];
}

/**
 * 여행 코스 목록
 */
export interface FestivalTravelCourseResponse {
  /** 코스 ID */
  id: number;
  /** 코스명 */
  title: string;
  /** 시각 */
  time: string;
}

/**
 * 근처 볼거리 목록
 */
export interface NearbyAttractionResponse {
  /** 장소명 */
  name: string;
  /** 썸네일 이미지 URL */
  thumbnail: string;
  /** 경도 */
  mapx: string;
  /** 위도 */
  mapy: string;
  /** 장소 설명/상세 페이지 URL */
  descriptionUrl: string;
}

/**
 * 축제 리뷰 목록 응답
 */
export interface FestivalReviewListResponse {
  /** 응답 데이터 목록 */
  content: FestivalReviewResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page: number;
  /** 페이지 크기 */
  size: number;
  /** 전체 요소 개수 */
  totalElements: number;
  /** 전체 페이지 개수 */
  totalPages: number;
  /** 첫 번째 페이지 여부 */
  first: boolean;
  /** 마지막 페이지 여부 */
  last: boolean;
  /** 빈 페이지 여부 */
  empty: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface FestivalReviewResponse {
  /** 리뷰 ID */
  id: number;
  /** 작성자 닉네임 */
  nickname: string;
  /** 작성자 프로필 이미지 URL */
  profileImage: string;
  /** 리뷰 내용 */
  content: string;
  /** 작성일 */
  createdAt: string;
}

/**
 * 축제 주변 맛집 목록 조회 요청
 */
export interface FestivalRestaurantPageRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /** 축제 ID */
  festivalId: number;
  /** 검색 반경 (미터) */
  radius: number;
  /** 음식 카테고리 */
  category: string;
  /** 정렬 기준 (distance,asc | rating,desc) */
  sort: string;
  offset: number;
}

/**
 * 축제 주변 맛집 목록 응답
 */
export interface FestivalRestaurantListResponse {
  /** 응답 데이터 목록 */
  content: FestivalRestaurantResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page: number;
  /** 페이지 크기 */
  size: number;
  /** 전체 요소 개수 */
  totalElements: number;
  /** 전체 페이지 개수 */
  totalPages: number;
  /** 첫 번째 페이지 여부 */
  first: boolean;
  /** 마지막 페이지 여부 */
  last: boolean;
  /** 빈 페이지 여부 */
  empty: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface FestivalRestaurantResponse {
  /** 식당명 */
  name: string;
  /** 주소 */
  address: string;
  /** 대표 이미지 */
  imageUrl: string;
}

/**
 * 축제 테마
 */
export type FestivalSearchRequestTheme =
  (typeof FestivalSearchRequestTheme)[keyof typeof FestivalSearchRequestTheme];

export const FestivalSearchRequestTheme = {
  CULTURE_ART: 'CULTURE_ART',
  FOOD: 'FOOD',
  MUSIC: 'MUSIC',
  NATURE: 'NATURE',
  TRADITION: 'TRADITION',
  ALL: 'ALL',
} as const;

export interface FestivalSearchRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /** 정렬 기준 (예: createdAt,desc) */
  sort: string;
  /** 검색 시작 날짜 */
  startDate: string;
  /** 검색 종료 날짜 */
  endDate: string;
  /** 경도 (한국 범위: 124~132) */
  mapX: number;
  /** 위도 (한국 범위: 33~39) */
  mapY: number;
  /** 검색 반경(미터) */
  radius: number;
  /** 지역 코드 */
  regionCode: number;
  /** 축제 테마 */
  theme: FestivalSearchRequestTheme;
  /** 검색 키워드 (축제명, 설명, 지역명 등 자유 검색) */
  searchParam: string;
  offset: number;
}

/**
 * 축제 목록 응답
 */
export interface FestivalListResponse {
  /** 응답 데이터 목록 */
  content: FestivalSummaryResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page: number;
  /** 페이지 크기 */
  size: number;
  /** 전체 요소 개수 */
  totalElements: number;
  /** 전체 페이지 개수 */
  totalPages: number;
  /** 첫 번째 페이지 여부 */
  first: boolean;
  /** 마지막 페이지 여부 */
  last: boolean;
  /** 빈 페이지 여부 */
  empty: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface FestivalSummaryResponse {
  /** 축제 ID */
  id: number;
  /** 썸네일 이미지 URL */
  thumbnail: string;
  /** 테마 */
  theme: string;
  /** 축제명 */
  title: string;
  /** 북마크 여부 */
  bookmarked: boolean;
  /** 주소 */
  address: string;
  /** 축제 시작일 */
  startDate: string;
  /** 축제 종료일 */
  endDate: string;
  /** 경도 */
  map_x: number;
  /** 위도 */
  map_y: number;
}

/**
 * 테스트 성향 결과
 */
export type FestivalPersonalTestRequestPersonalityType =
  (typeof FestivalPersonalTestRequestPersonalityType)[keyof typeof FestivalPersonalTestRequestPersonalityType];

export const FestivalPersonalTestRequestPersonalityType = {
  ENERGIZER: 'ENERGIZER',
  EXPLORER: 'EXPLORER',
  CURATOR: 'CURATOR',
  SOCIALIZER: 'SOCIALIZER',
  HEALER: 'HEALER',
} as const;

export interface FestivalPersonalTestRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /** 정렬 기준 (예: createdAt,desc) */
  sort: string;
  /** 테스트 성향 결과 */
  personalityType: FestivalPersonalTestRequestPersonalityType;
  offset: number;
}

export interface FestivalMyPageRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /** 정렬 기준 (예: createdAt,desc) */
  sort: string;
  /** 북마크 여부 */
  bookmarked: boolean;
  offset: number;
}

/**
 * 축제 상태
 */
export type FestivalMapRequestStatus =
  (typeof FestivalMapRequestStatus)[keyof typeof FestivalMapRequestStatus];

export const FestivalMapRequestStatus = {
  ONGOING: 'ONGOING',
  UPCOMING: 'UPCOMING',
  ENDED: 'ENDED',
  ALL: 'ALL',
} as const;

/**
 * 기간
 */
export type FestivalMapRequestPeriod =
  (typeof FestivalMapRequestPeriod)[keyof typeof FestivalMapRequestPeriod];

export const FestivalMapRequestPeriod = {
  THIS_WEEK: 'THIS_WEEK',
  THIS_MONTH: 'THIS_MONTH',
  NEXT_MONTH: 'NEXT_MONTH',
  ALL: 'ALL',
} as const;

/**
 * 누구랑
 */
export type FestivalMapRequestWithWhom =
  (typeof FestivalMapRequestWithWhom)[keyof typeof FestivalMapRequestWithWhom];

export const FestivalMapRequestWithWhom = {
  FAMILY: 'FAMILY',
  COUPLE: 'COUPLE',
  PARENTS: 'PARENTS',
  PET: 'PET',
  FRIENDS: 'FRIENDS',
  ALL: 'ALL',
} as const;

/**
 * 테마
 */
export type FestivalMapRequestTheme =
  (typeof FestivalMapRequestTheme)[keyof typeof FestivalMapRequestTheme];

export const FestivalMapRequestTheme = {
  CULTURE_ART: 'CULTURE_ART',
  FOOD: 'FOOD',
  MUSIC: 'MUSIC',
  NATURE: 'NATURE',
  TRADITION: 'TRADITION',
  ALL: 'ALL',
} as const;

export interface FestivalMapRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /** 정렬 기준 (예: createdAt,desc) */
  sort: string;
  /** 축제 상태 */
  status: FestivalMapRequestStatus;
  /** 기간 */
  period: FestivalMapRequestPeriod;
  /** 누구랑 */
  withWhom: FestivalMapRequestWithWhom;
  /** 테마 */
  theme: FestivalMapRequestTheme;
  /** 좌상단 위도 */
  latTopLeft: number;
  /** 좌상단 경도 */
  lngTopLeft: number;
  /** 우하단 위도 */
  latBottomRight: number;
  /** 우하단 경도 */
  lngBottomRight: number;
  offset: number;
}

/**
 * 지역 필터
 */
export type FestivalCalendarRequestRegion =
  (typeof FestivalCalendarRequestRegion)[keyof typeof FestivalCalendarRequestRegion];

export const FestivalCalendarRequestRegion = {
  SEOUL: 'SEOUL',
  GYEONGGI: 'GYEONGGI',
  GANGWON: 'GANGWON',
  CHUNGCHEONG: 'CHUNGCHEONG',
  JEOLLA: 'JEOLLA',
  GYEONGSANG: 'GYEONGSANG',
  JEJU: 'JEJU',
  ALL: 'ALL',
} as const;

/**
 * 누구랑
 */
export type FestivalCalendarRequestWithWhom =
  (typeof FestivalCalendarRequestWithWhom)[keyof typeof FestivalCalendarRequestWithWhom];

export const FestivalCalendarRequestWithWhom = {
  FAMILY: 'FAMILY',
  COUPLE: 'COUPLE',
  PARENTS: 'PARENTS',
  PET: 'PET',
  FRIENDS: 'FRIENDS',
  ALL: 'ALL',
} as const;

/**
 * 테마
 */
export type FestivalCalendarRequestTheme =
  (typeof FestivalCalendarRequestTheme)[keyof typeof FestivalCalendarRequestTheme];

export const FestivalCalendarRequestTheme = {
  CULTURE_ART: 'CULTURE_ART',
  FOOD: 'FOOD',
  MUSIC: 'MUSIC',
  NATURE: 'NATURE',
  TRADITION: 'TRADITION',
  ALL: 'ALL',
} as const;

export interface FestivalCalendarRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /** 정렬 기준 (예: createdAt,desc) */
  sort: string;
  /** 지역 필터 */
  region: FestivalCalendarRequestRegion;
  /** 누구랑 */
  withWhom: FestivalCalendarRequestWithWhom;
  /** 테마 */
  theme: FestivalCalendarRequestTheme;
  /** 조회 기준 날짜 */
  date: string;
  offset: number;
}

export interface UserInfo {
  userId: number;
  email: string;
  nickname: string;
}

export type GetFestivalReviewsParams = {
  pageRequest: PageRequest;
};

export type OauthLoginParams = {
  /**
   * OAuth 인가 코드
   */
  code: string;
};

export type LinkOAuthAccountParams = {
  /**
   * OAuth 인가 코드
   */
  code: string;
};

export type UpdateMyInfoParams = {
  request: MyInfoUpdateRequest;
};

export type GetTopKeywordsParams = {
  limit: number;
};

export type GetMyReviewsParams = {
  pageRequest: PageRequest;
};

export type GetFestivalTravelCoursesParams = {
  request: FestivalTravelCoursePageRequest;
};

export type GetFestivalRestaurantsParams = {
  request: FestivalRestaurantPageRequest;
};

export type SearchFestivalsParams = {
  request: FestivalSearchRequest;
};

export type GetFestivalsForPersonalTestParams = {
  request: FestivalPersonalTestRequest;
};

export type GetMyPageFestivalsParams = {
  request: FestivalMyPageRequest;
};

export type GetFestivalsForMapParams = {
  request: FestivalMapRequest;
};

export type GetFestivalsForCalendarParams = {
  request: FestivalCalendarRequest;
};

export type CheckEmailParams = {
  email: string;
};

/**
 * Generated by orval v7.11.1 🍺
 * Do not edit manually.
 * SWYP10 Backend API
 * # 공통 응답 구조(CommonResponse)

모든 API 응답은 아래의 공통 구조로 래핑됩니다.

---

## ✅ 성공 응답 예시

```
{
  "success": true,
  "data": { ... },    // API별 실제 응답 객체
  "message": null,
  "code": null,
  "errorDetail": null
}
```

---

## ❌ 실패 응답 예시

```
{
  "success": false,
  "data": null,
  "message": "오류 메시지",
  "code": 4000,
  "errorDetail": {
    // 필요시 필드별 상세 에러 정보 등
  }
}
```

- `success`: true(성공), false(실패)
- `data`: 실제 응답 데이터(성공 시만)
- `message`: 에러 메시지(실패 시)
- `code`: 에러 코드(실패 시)
- `errorDetail`: (옵션) 상세 에러 정보, 유효성 오류 등

---
각 API의 실제 데이터 구조는 `data` 필드 안에 포함되어 있습니다.

 * OpenAPI spec version: 1.0.0
 */
export interface FestivalReviewCreateRequest {
  /**
   * 리뷰 내용
   * @minLength 0
   * @maxLength 500
   */
  content: string;
}

export interface FestivalCalendarDailyCountResponse {
  startDate: string;
  endDate: string;
  dailyCounts: {
    date: string;
    count: number;
  }[];
}

/**
 * JWT 토큰 응답
 */
export interface TokenResponse {
  /** JWT 액세스 토큰 */
  accessToken: string;
  /** 토큰 타입 */
  tokenType: string;
  /** 토큰 만료 시간 (초) */
  expiresIn: number;
  /**
   * 사용자 ID (OAuth 단계에서는 null)
   * @nullable
   */
  userId?: number | null;
  /** 사용자 닉네임 */
  nickname: string;
  /** 추가 회원가입 필요 여부 */
  needsAdditionalSignup: boolean;
}

export interface MyInfoResponse {
  /** 회원 ID */
  userId?: number;
  /** 닉네임 */
  nickname?: string;
  /**
   * 프로필 이미지 URL
   * @nullable
   */
  profileImage?: string | null;
}

/**
 * 검색 키워드 목록 응답
 */
export interface SearchKeywordListResponse {
  /** 응답 데이터 목록 */
  content?: SearchKeywordResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page?: number;
  /** 페이지 크기 */
  size?: number;
  /** 전체 요소 개수 */
  totalElements?: number;
  /** 전체 페이지 개수 */
  totalPages?: number;
  /** 첫 번째 페이지 여부 */
  first?: boolean;
  /** 마지막 페이지 여부 */
  last?: boolean;
  /** 빈 페이지 여부 */
  empty?: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface SearchKeywordResponse {
  /** 검색어 */
  keyword?: string;
  /** 검색 횟수 */
  count?: number;
  /** 최근 검색일시 */
  lastSearchedAt?: string;
}

/**
 * 내 리뷰 목록 응답
 */
export interface MyReviewListResponse {
  /** 응답 데이터 목록 */
  content?: MyReviewResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page?: number;
  /** 페이지 크기 */
  size?: number;
  /** 전체 요소 개수 */
  totalElements?: number;
  /** 전체 페이지 개수 */
  totalPages?: number;
  /** 첫 번째 페이지 여부 */
  first?: boolean;
  /** 마지막 페이지 여부 */
  last?: boolean;
  /** 빈 페이지 여부 */
  empty?: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface MyReviewResponse {
  /** 리뷰 ID */
  id?: number;
  /** 축제 ID */
  festivalId?: number;
  /** 축제명 */
  festivalTitle?: string;
  /**
   * 썸네일 이미지 URL
   * @nullable
   */
  festivalThumbnail?: string | null;
  /** 리뷰 내용 */
  content?: string;
  /** 리뷰 작성 날짜 */
  createdAt?: string;
}

/**
 * 상세 내용
 * @nullable
 */
export type ContentResponse = {
  /**
   * 축제 타이틀
   * @nullable
   */
  title?: string | null;
  /**
   * 홈페이지 HTML
   * @nullable
   */
  homepage?: string | null;
  /**
   * 주소1
   * @nullable
   */
  addr1?: string | null;
  /**
   * 주소2
   * @nullable
   */
  addr2?: string | null;
  /**
   * 개요/소개
   * @nullable
   */
  overview?: string | null;
} | null;

export interface FestivalDetailResponse {
  /** 축제 ID */
  id?: number;
  /** 축제명 */
  title?: string;
  /**
   * 주소
   * @nullable
   */
  address?: string | null;
  /**
   * 테마
   * @nullable
   */
  theme?: string | null;
  /**
   * 축제 시작일
   * @nullable
   */
  startDate?: string | null;
  /**
   * 축제 종료일
   * @nullable
   */
  endDate?: string | null;
  /**
   * 썸네일 이미지 URL
   * @nullable
   */
  thumbnail?: string | null;
  /**
   * 경도
   * @nullable
   */
  mapx?: string | null;
  /**
   * 위도
   * @nullable
   */
  mapy?: string | null;
  /**
   * 이미지 목록
   * @nullable
   */
  images?: ImageResponse[] | null;
  content?: ContentResponse;
  info?: InfoResponse;
  bookmarked?: boolean;
}

/**
 * 이미지 목록
 * @nullable
 */
export type ImageResponse = {
  /**
   * 콘텐츠ID
   * @nullable
   */
  contentid?: string | null;
  /**
   * 원본 이미지 URL
   * @nullable
   */
  originimgurl?: string | null;
  /**
   * 이미지명
   * @nullable
   */
  imgname?: string | null;
  /**
   * 작은 이미지 URL
   * @nullable
   */
  smallimageurl?: string | null;
} | null;

/**
 * 추가 정보
 * @nullable
 */
export type InfoResponse = {
  /**
   * 주최
   * @nullable
   */
  sponsor1?: string | null;
  /**
   * 주최 연락처
   * @nullable
   */
  sponsor1tel?: string | null;
  /**
   * 행사 시작일(YYYYMMDD)
   * @nullable
   */
  eventstartdate?: string | null;
  /**
   * 행사 종료일(YYYYMMDD)
   * @nullable
   */
  eventenddate?: string | null;
  /**
   * 운영 시간
   * @nullable
   */
  playtime?: string | null;
  /**
   * 장소
   * @nullable
   */
  eventplace?: string | null;
  /**
   * 행사 홈페이지
   * @nullable
   */
  eventhomepage?: string | null;
  /**
   * 이용 요금
   * @nullable
   */
  usetimefestival?: string | null;
  /**
   * 할인 정보
   * @nullable
   */
  discountinfofestival?: string | null;
  /**
   * 소요 시간
   * @nullable
   */
  spendtimefestival?: string | null;
} | null;

export interface FestivalTravelCourseListResponse {
  /**
   * 여행 코스 목록
   * @nullable
   */
  courses?: FestivalTravelCourseResponse[] | null;
  /**
   * 근처 볼거리 목록
   * @nullable
   */
  nearbyAttractions?: NearbyAttractionResponse[] | null;
}

/**
 * 여행 코스 목록
 * @nullable
 */
export type FestivalTravelCourseResponse = {
  /** 코스 ID */
  id?: number;
  /** 코스명 */
  title?: string;
  /**
   * 시각
   * @nullable
   */
  time?: string | null;
} | null;

/**
 * 근처 볼거리 목록
 * @nullable
 */
export type NearbyAttractionResponse = {
  /** 장소명 */
  name?: string;
  /**
   * 썸네일 이미지 URL
   * @nullable
   */
  thumbnail?: string | null;
  /**
   * 경도
   * @nullable
   */
  mapx?: string | null;
  /**
   * 위도
   * @nullable
   */
  mapy?: string | null;
  /**
   * 장소 설명/상세 페이지 URL
   * @nullable
   */
  descriptionUrl?: string | null;
} | null;

/**
 * 축제 리뷰 목록 응답
 */
export interface FestivalReviewListResponse {
  /** 응답 데이터 목록 */
  content?: FestivalReviewResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page?: number;
  /** 페이지 크기 */
  size?: number;
  /** 전체 요소 개수 */
  totalElements?: number;
  /** 전체 페이지 개수 */
  totalPages?: number;
  /** 첫 번째 페이지 여부 */
  first?: boolean;
  /** 마지막 페이지 여부 */
  last?: boolean;
  /** 빈 페이지 여부 */
  empty?: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface FestivalReviewResponse {
  /** 리뷰 ID */
  id?: number;
  /** 작성자 닉네임 */
  nickname?: string;
  /**
   * 작성자 프로필 이미지 URL
   * @nullable
   */
  profileImage?: string | null;
  /** 리뷰 내용 */
  content?: string;
  /** 작성일 */
  createdAt?: string;
}

/**
 * 축제 주변 맛집 목록 응답
 */
export interface FestivalRestaurantListResponse {
  /** 응답 데이터 목록 */
  content?: FestivalRestaurantResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page?: number;
  /** 페이지 크기 */
  size?: number;
  /** 전체 요소 개수 */
  totalElements?: number;
  /** 전체 페이지 개수 */
  totalPages?: number;
  /** 첫 번째 페이지 여부 */
  first?: boolean;
  /** 마지막 페이지 여부 */
  last?: boolean;
  /** 빈 페이지 여부 */
  empty?: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface FestivalRestaurantResponse {
  /** 식당명 */
  name?: string;
  /**
   * 주소
   * @nullable
   */
  address?: string | null;
  /**
   * 대표 이미지
   * @nullable
   */
  imageUrl?: string | null;
}

/**
 * 축제 목록 응답
 */
export interface FestivalListResponse {
  /** 응답 데이터 목록 */
  content?: FestivalSummaryResponse[];
  /** 현재 페이지 번호 (0부터 시작) */
  page?: number;
  /** 페이지 크기 */
  size?: number;
  /** 전체 요소 개수 */
  totalElements?: number;
  /** 전체 페이지 개수 */
  totalPages?: number;
  /** 첫 번째 페이지 여부 */
  first?: boolean;
  /** 마지막 페이지 여부 */
  last?: boolean;
  /** 빈 페이지 여부 */
  empty?: boolean;
}

/**
 * 응답 데이터 목록
 */
export interface FestivalSummaryResponse {
  /** 축제 ID */
  id?: number;
  /**
   * 썸네일 이미지 URL
   * @nullable
   */
  thumbnail?: string | null;
  /**
   * 테마
   * @nullable
   */
  theme?: string | null;
  /** 축제명 */
  title?: string;
  /** 북마크 여부 */
  bookmarked?: boolean;
  /**
   * 주소
   * @nullable
   */
  address?: string | null;
  /**
   * 축제 시작일
   * @nullable
   */
  startDate?: string | null;
  /**
   * 축제 종료일
   * @nullable
   */
  endDate: string | null;

  /**
   * 경도
   * @nullable
   */
  map_x?: string | null;
  /**
   * 위도
   * @nullable
   */
  map_y?: string | null;
}

/**
 * 테스트 성향 결과
 * @nullable
 */
export type FestivalPersonalTestRequestPersonalityType =
  | (typeof FestivalPersonalTestRequestPersonalityType)[keyof typeof FestivalPersonalTestRequestPersonalityType]
  | null;

export const FestivalPersonalTestRequestPersonalityType = {
  ENERGIZER: 'ENERGIZER',
  EXPLORER: 'EXPLORER',
  CURATOR: 'CURATOR',
  SOCIALIZER: 'SOCIALIZER',
  HEALER: 'HEALER',
} as const;

export interface FestivalPersonalTestRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort: string | null;
  /**
   * 테스트 성향 결과
   * @nullable
   */
  personalityType: FestivalPersonalTestRequestPersonalityType;
  offset: number;
}

export interface FestivalMyPageRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort: string | null;
  /**
   * 북마크 여부
   * @nullable
   */
  bookmarked: boolean | null;
  offset: number;
}

/**
 * 축제 상태
 */
export type FestivalMapRequestStatus =
  (typeof FestivalMapRequestStatus)[keyof typeof FestivalMapRequestStatus];

export const FestivalMapRequestStatus = {
  ONGOING: 'ONGOING',
  UPCOMING: 'UPCOMING',
  ENDED: 'ENDED',
  ALL: 'ALL',
} as const;

/**
 * 기간
 */
export type FestivalMapRequestPeriod =
  (typeof FestivalMapRequestPeriod)[keyof typeof FestivalMapRequestPeriod];

export const FestivalMapRequestPeriod = {
  THIS_WEEK: 'THIS_WEEK',
  THIS_MONTH: 'THIS_MONTH',
  NEXT_MONTH: 'NEXT_MONTH',
  ALL: 'ALL',
} as const;

/**
 * 누구랑
 */
export type FestivalMapRequestWithWhom =
  (typeof FestivalMapRequestWithWhom)[keyof typeof FestivalMapRequestWithWhom];

export const FestivalMapRequestWithWhom = {
  FAMILY: 'FAMILY',
  COUPLE: 'COUPLE',
  PARENTS: 'PARENTS',
  PET: 'PET',
  FRIENDS: 'FRIENDS',
  ALL: 'ALL',
} as const;

/**
 * 테마
 */
export type FestivalMapRequestTheme =
  (typeof FestivalMapRequestTheme)[keyof typeof FestivalMapRequestTheme];

export const FestivalMapRequestTheme = {
  CULTURE_ART: 'CULTURE_ART',
  FOOD: 'FOOD',
  MUSIC: 'MUSIC',
  NATURE: 'NATURE',
  TRADITION: 'TRADITION',
  ALL: 'ALL',
} as const;

export interface FestivalMapRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort: string | null;
  /** 축제 상태 */
  status: FestivalMapRequestStatus;
  /** 기간 */
  period: FestivalMapRequestPeriod;
  /** 누구랑 */
  withWhom: FestivalMapRequestWithWhom;
  /** 테마 */
  theme: FestivalMapRequestTheme;
  /**
   * 좌상단 위도
   * @nullable
   */
  latTopLeft: number | null;
  /**
   * 좌상단 경도
   * @nullable
   */
  lngTopLeft: number | null;
  /**
   * 우하단 위도
   * @nullable
   */
  latBottomRight: number | null;
  /**
   * 우하단 경도
   * @nullable
   */
  lngBottomRight: number | null;
  offset: number;
}

/**
 * 지역 필터
 * @nullable
 */
export type FestivalCalendarRequestRegion =
  | (typeof FestivalCalendarRequestRegion)[keyof typeof FestivalCalendarRequestRegion]
  | null;

export const FestivalCalendarRequestRegion = {
  SEOUL: 'SEOUL',
  GYEONGGI: 'GYEONGGI',
  GANGWON: 'GANGWON',
  CHUNGCHEONG: 'CHUNGCHEONG',
  JEOLLA: 'JEOLLA',
  GYEONGSANG: 'GYEONGSANG',
  JEJU: 'JEJU',
  ALL: 'ALL',
} as const;

/**
 * 누구랑
 */
export type FestivalCalendarRequestWithWhom =
  (typeof FestivalCalendarRequestWithWhom)[keyof typeof FestivalCalendarRequestWithWhom];

export const FestivalCalendarRequestWithWhom = {
  FAMILY: 'FAMILY',
  COUPLE: 'COUPLE',
  PARENTS: 'PARENTS',
  PET: 'PET',
  FRIENDS: 'FRIENDS',
  ALL: 'ALL',
} as const;

/**
 * 테마
 */
export type FestivalCalendarRequestTheme =
  (typeof FestivalCalendarRequestTheme)[keyof typeof FestivalCalendarRequestTheme];

export const FestivalCalendarRequestTheme = {
  CULTURE_ART: 'CULTURE_ART',
  FOOD: 'FOOD',
  MUSIC: 'MUSIC',
  NATURE: 'NATURE',
  TRADITION: 'TRADITION',
  ALL: 'ALL',
} as const;

export interface FestivalCalendarRequest {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size: number;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort: string | null;
  /**
   * 지역 필터
   * @nullable
   */
  region: FestivalCalendarRequestRegion;
  /** 누구랑 */
  withWhom: FestivalCalendarRequestWithWhom;
  /** 테마 */
  theme: FestivalCalendarRequestTheme;
  /** 조회 기준 날짜 */
  date: string;
  startDate: string;
  endDate: string;
  offset: number;
}

export interface FestivalCalendarDailyCountRequest {
  startDate: string;
  endDate: string;
}

/**
 * 사용자 정보
 */
export interface UserInfo {
  /** 사용자 ID */
  userId: number;
  /** 이메일 주소 */
  email: string;
  /** 닉네임 */
  nickname: string;
}

export type RunFestivalSyncJob200 = {
  [key: string]: { [key: string]: unknown };
};

export type GetFestivalReviewsParams = {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
};

export type OauthLoginParams = {
  /**
   * OAuth 인가 코드
   */
  code: string;
};

export type UpdateMyInfoParams = {
  /**
   * 닉네임
   * @minLength 0
   * @maxLength 20
   */
  nickname: string;
};

export type GetTopKeywordsParams = {
  limit?: number;
};

export type GetMyReviewsParams = {
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
};

export type GetFestivalTravelCoursesParams = {
  /**
   * 코스 타입
   * @nullable
   */
  courseType?: string | null;
  /**
   * 테마
   * @nullable
   */
  theme?: string | null;
  /**
   * 정렬 기준 (popularity,desc | duration,asc)
   * @nullable
   */
  sort?: string | null;
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
};

export type GetFestivalRestaurantsParams = {
  /**
   * 검색 반경 (미터)
   * @nullable
   */
  radius?: number | null;
  /**
   * 음식 카테고리
   * @nullable
   */
  category?: string | null;
  /**
   * 정렬 기준 (distance,asc | rating,desc)
   * @nullable
   */
  sort?: string | null;
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
};

export type SearchFestivalsParams = {
  /**
   * 검색 시작 날짜
   * @nullable
   */
  startDate?: string | null;
  /**
   * 검색 종료 날짜
   * @nullable
   */
  endDate?: string | null;
  /**
   * 경도 (한국 범위: 124~132)
   * @nullable
   */
  mapX?: number | null;
  /**
   * 위도 (한국 범위: 33~39)
   * @nullable
   */
  mapY?: number | null;
  /**
   * 검색 반경(미터)
   * @nullable
   */
  radius?: number | null;
  /**
   * 지역 코드
   * @nullable
   */
  regionCode?: number | null;
  /**
   * 축제 테마
   * @nullable
   */
  theme?: SearchFestivalsTheme;
  /**
   * 검색 키워드 (축제명, 설명, 지역명 등 자유 검색)
   * @nullable
   */
  searchParam?: string | null;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort?: string | null;
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
};

export type SearchFestivalsTheme =
  | (typeof SearchFestivalsTheme)[keyof typeof SearchFestivalsTheme]
  | null;

export const SearchFestivalsTheme = {
  CULTURE_ART: 'CULTURE_ART',
  FOOD: 'FOOD',
  MUSIC: 'MUSIC',
  NATURE: 'NATURE',
  TRADITION: 'TRADITION',
  ALL: 'ALL',
} as const;

export type GetFestivalsForPersonalTestParams = {
  /**
   * 테스트 성향 결과
   * @nullable
   */
  personalityType?: GetFestivalsForPersonalTestPersonalityType;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort?: string | null;
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
};

export type GetFestivalsForPersonalTestPersonalityType =
  | (typeof GetFestivalsForPersonalTestPersonalityType)[keyof typeof GetFestivalsForPersonalTestPersonalityType]
  | null;

export const GetFestivalsForPersonalTestPersonalityType = {
  ENERGIZER: 'ENERGIZER',
  EXPLORER: 'EXPLORER',
  CURATOR: 'CURATOR',
  SOCIALIZER: 'SOCIALIZER',
  HEALER: 'HEALER',
} as const;

export type GetMyPageFestivalsParams = {
  /**
   * 북마크 여부
   * @nullable
   */
  bookmarked?: boolean | null;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort?: string | null;
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
};

export type GetFestivalsForMapParams = {
  /**
   * 축제 상태
   */
  status?: GetFestivalsForMapStatus;
  /**
   * 기간
   */
  period?: GetFestivalsForMapPeriod;
  /**
   * 누구랑
   */
  withWhom?: GetFestivalsForMapWithWhom;
  /**
   * 테마
   */
  theme?: GetFestivalsForMapTheme;
  /**
   * 좌상단 위도
   * @nullable
   */
  latTopLeft?: number | null;
  /**
   * 좌상단 경도
   * @nullable
   */
  lngTopLeft?: number | null;
  /**
   * 우하단 위도
   * @nullable
   */
  latBottomRight?: number | null;
  /**
   * 우하단 경도
   * @nullable
   */
  lngBottomRight?: number | null;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort?: string | null;
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
};

export type GetFestivalsForMapStatus =
  (typeof GetFestivalsForMapStatus)[keyof typeof GetFestivalsForMapStatus];

export const GetFestivalsForMapStatus = {
  ONGOING: 'ONGOING',
  UPCOMING: 'UPCOMING',
  ENDED: 'ENDED',
  ALL: 'ALL',
} as const;

export type GetFestivalsForMapPeriod =
  (typeof GetFestivalsForMapPeriod)[keyof typeof GetFestivalsForMapPeriod];

export const GetFestivalsForMapPeriod = {
  THIS_WEEK: 'THIS_WEEK',
  THIS_MONTH: 'THIS_MONTH',
  NEXT_MONTH: 'NEXT_MONTH',
  ALL: 'ALL',
} as const;

export type GetFestivalsForMapWithWhom =
  (typeof GetFestivalsForMapWithWhom)[keyof typeof GetFestivalsForMapWithWhom];

export const GetFestivalsForMapWithWhom = {
  FAMILY: 'FAMILY',
  COUPLE: 'COUPLE',
  PARENTS: 'PARENTS',
  PET: 'PET',
  FRIENDS: 'FRIENDS',
  ALL: 'ALL',
} as const;

export type GetFestivalsForMapTheme =
  (typeof GetFestivalsForMapTheme)[keyof typeof GetFestivalsForMapTheme];

export const GetFestivalsForMapTheme = {
  CULTURE_ART: 'CULTURE_ART',
  FOOD: 'FOOD',
  MUSIC: 'MUSIC',
  NATURE: 'NATURE',
  TRADITION: 'TRADITION',
  ALL: 'ALL',
} as const;

export type GetFestivalsForCalendarParams = {
  /**
   * 지역 필터
   * @nullable
   */
  region?: GetFestivalsForCalendarRegion;
  /**
   * 누구랑
   */
  withWhom?: GetFestivalsForCalendarWithWhom;
  /**
   * 테마
   */
  theme?: GetFestivalsForCalendarTheme;
  /**
   * 조회 기준 날짜
   */
  date?: string;
  /**
   * 정렬 기준 (예: createdAt,desc)
   * @nullable
   */
  sort?: string | null;
  /**
   * 페이지 번호 (0부터 시작)
   * @minimum 0
   */
  page?: number;
  /**
   * 페이지 크기
   * @minimum 1
   * @maximum 100
   */
  size?: number;
  /**
   * 유저가 선택한 날짜가 없을 경우 범위 조회 시작 날짜, API 서버 쪽은 추후 반영 예정
   */
  startDate?: string;
  /**
   * 유저가 선택한 날짜가 없을 경우 범위 조회 종료 날짜
   */
  endDate?: string;
};

export type GetFestivalsForCalendarRegion =
  | (typeof GetFestivalsForCalendarRegion)[keyof typeof GetFestivalsForCalendarRegion]
  | null;

export const GetFestivalsForCalendarRegion = {
  SEOUL: 'SEOUL',
  GYEONGGI: 'GYEONGGI',
  GANGWON: 'GANGWON',
  CHUNGCHEONG: 'CHUNGCHEONG',
  JEOLLA: 'JEOLLA',
  GYEONGSANG: 'GYEONGSANG',
  JEJU: 'JEJU',
  ALL: 'ALL',
} as const;

export type GetFestivalsForCalendarWithWhom =
  (typeof GetFestivalsForCalendarWithWhom)[keyof typeof GetFestivalsForCalendarWithWhom];

export const GetFestivalsForCalendarWithWhom = {
  FAMILY: 'FAMILY',
  COUPLE: 'COUPLE',
  PARENTS: 'PARENTS',
  PET: 'PET',
  FRIENDS: 'FRIENDS',
  ALL: 'ALL',
} as const;

export type GetFestivalsForCalendarTheme =
  (typeof GetFestivalsForCalendarTheme)[keyof typeof GetFestivalsForCalendarTheme];

export const GetFestivalsForCalendarTheme = {
  CULTURE_ART: 'CULTURE_ART',
  FOOD: 'FOOD',
  MUSIC: 'MUSIC',
  NATURE: 'NATURE',
  TRADITION: 'TRADITION',
  ALL: 'ALL',
} as const;
